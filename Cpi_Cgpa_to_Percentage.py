import sysimport typingimport webbrowserimport datetimefrom PyQt5 import QtCorefrom PyQt5.QtCore import *from PyQt5.QtGui import *from PyQt5.QtWidgets import QMainWindow, QLabel, QLineEdit, QPushButton, QApplication, QDockWidgetclass MainWindow(QMainWindow):    def __init__(self):        QMainWindow.__init__(self)        # Design Window        self.setWindowIcon(QIcon("Icons/CalculatorIcon.png"))        self.setMinimumSize(QSize(1366, 825))        self.setWindowTitle("SPI/CGPA")        self.setStyleSheet('background-color:white;')        # Input Take from the User        self.line = QLineEdit(self)        self.line.setPlaceholderText('Enter CPI/CGPA')        self.line.setStyleSheet('border: 1px solid black;background-color : LightGrey;')        self.line.move(450, 240)        self.line.resize(100, 32)        self.line.setToolTip('Enter CPI/CGPA')        self.line.returnPressed.connect(self.checkValidation)        # Output Give to the User        self.resultBox = QLineEdit(self)        self.resultBox.move(800, 240)        self.resultBox.setStyleSheet('border: 1px solid black;background-color : LightGrey;')        self.resultBox.setPlaceholderText("0.00%")        self.resultBox.setToolTip('Result in Percentage.')        self.resultBox.setReadOnly(True)        self.resultBox.resize(100, 32)        # Set Logos        self.setLogos()        # Set All Labels        self.setLabel()        # Set Arrow ICON        self.setDjProfile()        self.setDdProfile()        self.setBjPrifile()        self.setAllIcon()        self.address = QLabel(self)        self.address.setText(            "Noble Group of Institutions,<br><font color='lightred'>'Parth Vatika'</font> "            "Junagadh Bhesan Road, Via. Vadal <br>  Nr. Bamangam, Junagadh Gujarat India."            "<br>Pincode : 362310")        self.address.setFont(QFont("Times new Roman", 13))        self.address.move(1000, 550)        self.address.adjustSize()        addButton = QPushButton(self)        addButton.move(970, 550)        addButton.setIcon(QIcon("Icons/AddressIcon.png"))        addButton.setIconSize(QSize(23, 23))        addButton.resize(QSize(23, 23))        addButton.setStyleSheet("border: 1px black")        addButton.clicked.connect(lambda: webbrowser.open("https://rb.gy/d6gjxj"))        self.gmail = QLabel(self)        self.gmail.setText("tech.totes.ngivbt.edu.in")        self.gmail.setFont(QFont("Times new Roman", 13))        self.gmail.move(1000, 650)        self.gmail.adjustSize()        addButton = QPushButton(self)        addButton.move(970, 650)        addButton.setIcon(QIcon("Icons/Gmail.png"))        addButton.setIconSize(QSize(23, 23))        addButton.resize(QSize(23, 23))        addButton.setStyleSheet("border: 1px black")        addButton.clicked.connect(lambda: webbrowser.open("https://www.gmail.com"))        self.copy = QLabel(self)        self.copy.setText("Copyright " + str(datetime.datetime.now().year) +                          " Tech-Totes Community All Rights Reserve.")        self.copy.setFont(QFont("Times new Roman", 13))        self.copy.move(430, 660)        self.copy.adjustSize()        self.develop = QLabel(self)        self.develop.setText("developed By : ")        self.develop.setFont(QFont("Times new Roman", 13))        self.develop.move(10, 150)        self.show()    def setDjProfile(self):        self.firstProfile = QLabel(self)        self.firstProfile.setText("Mr. Darshan Bhatt<br>Software Developer")        self.firstProfile.move(10, 450)        self.firstProfile.setFont(QFont("Times new Roman", 15))        self.firstProfile.adjustSize()        sButton = QPushButton(self)        sButton.move(10, 500)        sButton.setIcon(QIcon("Icons/LinkedIn.png"))        sButton.setIconSize(QSize(30, 30))        sButton.resize(QSize(30, 30))        sButton.setStyleSheet("border: 1px black")        sButton.clicked.connect(lambda: webbrowser.open("https://www.linkedin.com/in/mrbhatt/"))        sButton = QPushButton(self)        sButton.move(50, 500)        sButton.setIcon(QIcon("Icons/Twitter.png"))        sButton.setIconSize(QSize(30, 30))        sButton.resize(QSize(30, 30))        sButton.setStyleSheet("border: 1px black")        sButton.clicked.connect(lambda: webbrowser.open("https://twitter.com/mrbhatt88"))        sButton = QPushButton(self)        sButton.move(95, 500)        sButton.setIcon(QIcon("Icons/GitHub.png"))        sButton.setIconSize(QSize(30, 30))        sButton.resize(QSize(30, 30))        sButton.setStyleSheet("border: 1px black")        sButton.clicked.connect(lambda: webbrowser.open("https://github.com/mrbhatt-88"))        sButton = QPushButton(self)        sButton.move(140, 500)        sButton.setIcon(QIcon("Icons/Stack.png"))        sButton.setIconSize(QSize(30, 30))        sButton.resize(QSize(30, 30))        sButton.setStyleSheet("border: 1px black")        sButton.clicked.connect(lambda: webbrowser.open("https://stackoverflow.com/users/13558784/mr-darshan-bhatt"))    def setDdProfile(self):        self.firstProfile = QLabel(self)        self.firstProfile.setText("Deep Dalsania<br>Software Engineer")        self.firstProfile.move(10, 323)        self.firstProfile.setFont(QFont("Times new Roman", 15))        self.firstProfile.adjustSize()        sButton = QPushButton(self)        sButton.move(10, 373)        sButton.setIcon(QIcon("Icons/LinkedIn.png"))        sButton.setIconSize(QSize(30, 30))        sButton.resize(QSize(30, 30))        sButton.setStyleSheet("border: 1px black")        sButton.clicked.connect(lambda: webbrowser.open("https://www.linkedin.com/in/deepdalsania/"))        sButton = QPushButton(self)        sButton.move(50, 373)        sButton.setIcon(QIcon("Icons/Twitter.png"))        sButton.setIconSize(QSize(30, 30))        sButton.resize(QSize(30, 30))        sButton.setStyleSheet("border: 1px black")        sButton.clicked.connect(lambda: webbrowser.open("https://twitter.com/DalsaniaDd"))        sButton = QPushButton(self)        sButton.move(95, 373)        sButton.setIcon(QIcon("Icons/GitHub.png"))        sButton.setIconSize(QSize(30, 30))        sButton.resize(QSize(30, 30))        sButton.setStyleSheet("border: 1px black")        sButton.clicked.connect(lambda: webbrowser.open("https://github.com/deepdalsania"))        sButton = QPushButton(self)        sButton.move(140, 373)        sButton.setIcon(QIcon("Icons/Stack.png"))        sButton.setIconSize(QSize(30, 30))        sButton.resize(QSize(30, 30))        sButton.setStyleSheet("border: 1px black")        sButton.clicked.connect(            lambda: webbrowser.open("https://www.google.comhttps://stackoverflow.com/users/13351822/deep-dalsania"))    def setBjPrifile(self):        self.firstProfile = QLabel(self)        self.firstProfile.setText("Bharat Kadchha<br>Software Developer")        self.firstProfile.move(10, 200)        self.firstProfile.setFont(QFont("Times new Roman", 15))        self.firstProfile.adjustSize()        sButton = QPushButton(self)        sButton.move(10, 250)        sButton.setIcon(QIcon("Icons/LinkedIn.png"))        sButton.setIconSize(QSize(30, 30))        sButton.resize(QSize(30, 30))        sButton.setStyleSheet("border: 1px black")        sButton.clicked.connect(lambda: webbrowser.open("https://www.linkedin.com/in/deepdalsania/m"))        sButton = QPushButton(self)        sButton.move(50, 250)        sButton.setIcon(QIcon("Icons/Twitter.png"))        sButton.setIconSize(QSize(30, 30))        sButton.resize(QSize(30, 30))        sButton.setStyleSheet("border: 1px black")        sButton.clicked.connect(lambda: webbrowser.open("https://twitter.com/DalsaniaDd"))        sButton = QPushButton(self)        sButton.move(95, 250)        sButton.setIcon(QIcon("Icons/GitHub.png"))        sButton.setIconSize(QSize(30, 30))        sButton.resize(QSize(30, 30))        sButton.setStyleSheet("border: 1px black")        sButton.clicked.connect(lambda: webbrowser.open("https://github.com/deepdalsania"))        sButton = QPushButton(self)        sButton.move(150, 250)        sButton.setIcon(QIcon("Icons/Stack.png"))        sButton.setIconSize(QSize(30, 30))        sButton.resize(QSize(30, 30))        sButton.setStyleSheet("border: 1px black")        sButton.clicked.connect(lambda: webbrowser.open("https://stackoverflow.com/users/13351822/deep-dalsania"))    def setLogos(self):        self.nLogo = QLabel(self)        self.nLogo.setPixmap(QPixmap('Icons/NGILOGO.png'))        self.nLogo.setGeometry(QRect(20, 10, 150, 75))        self.nLogo.setScaledContents(True)        self.nLogo.setToolTip('Noble Group of Institution.')        self.tLogo = QLabel(self)        self.tLogo.setPixmap(QPixmap("Icons/TT2LOGO.png"))        self.tLogo.setGeometry(QRect(1175, 10, 160, 150))        self.tLogo.setScaledContents(True)        self.tLogo.setToolTip('Tech-Totes Club.')    def setLabel(self):        self.fMsg = QLabel(self)        self.fMsg.setText(            "<b>Here You can calculate percentage (%) from CPI/CGPA/SPI. SPI/CPI/CGPA is mentioned in marksheet.</b>")        self.fMsg.setFont(QFont("Times new Roman", 12))        self.fMsg.move(340, 350)        self.fMsg.adjustSize()        self.fMsg = QLabel(self)        self.fMsg.setText("<b>Percentage (%) = (( SPI \ CPI \ CGPA) - 0.5) x 10</b>")        self.fMsg.setFont(QFont("Times new Roman", 12))        self.fMsg.move(420, 400)        self.fMsg.adjustSize()        # Hording        self.Hording = QLabel(self)        self.Hording.setText("<h1><font color='blue'><b>GTU Calculator for SPI/CPI/CGPA to Percentage</b></font></h1>")        self.Hording.setStyleSheet('background-color : white;font-family: "Times new Roman')        self.Hording.setFont(QFont("Times new Roman", 10))        self.Hording.move(400, 10)        self.Hording.adjustSize()        # Error label        self.errorLabel = QLabel(self)        self.errorLabel.move(450, 290)        self.errorLabel.setFont(QFont('10'))    def setAllIcon(self):        self.hLine = QLabel(self)        self.hLine.setPixmap(QPixmap("Icons/Line.png"))        self.hLine.setGeometry(QRect(5, 174, 185, 30))        self.hLine.setScaledContents(True)        self.arrow = QLabel(self)        self.arrow.setPixmap(QPixmap("Icons/ARR.png"))        self.arrow.setGeometry(QRect(650, 240, 50, 40))        self.arrow.setScaledContents(True)        self.arrow.setToolTip('Tech-Totes Club.')        self.arrow = QLabel(self)        self.arrow.setPixmap(QPixmap("Icons/ARR.png"))        self.arrow.setGeometry(QRect(280, 345, 30, 30))        self.arrow.setScaledContents(True)        self.arrow.setToolTip('Tech-Totes Club.')        self.arrow = QLabel(self)        self.arrow.setPixmap(QPixmap("Icons/ARR.png"))        self.arrow.setGeometry(QRect(280, 395, 30, 30))        self.arrow.setScaledContents(True)        self.arrow.setToolTip('Tech-Totes Club.')    def resizeDocks(self, docks: typing.Iterable[QDockWidget], sizes: typing.Iterable[int],                    orientation: QtCore.Qt.Orientation) -> None:        super().resizeDocks(docks, sizes, orientation)    def keyPressEvent(self, e):        if e.key() == Qt.Key_Backspace or e.key() == Qt.Key_Delete:            self.line.clear()            self.resultBox.clear()            self.errorLabel.clear()        if e.key() == Qt.Key_Escape:            self.close()    # Check Validation of the Number    def checkValidation(self):        print(len(self.line.text()))        if len(self.line.text()) == 0:            self.errorLabel.setText("<font color='red'><b>* Required.</b></font>")            self.resultBox.clear()        elif self.line.text().__contains__('.') and len(self.line.text().split('.')[1]) > 2:            self.errorLabel.setText("<font color='red'><b>* Please enter CPI/CGPA in proper format.</b></font>")        elif (self.line.text().isnumeric() and 1 <= int(self.line.text()) <= 10) or 1.00 <= float(                self.line.text()) <= 10.00:            self.resultBox.setText(str(round(((float(self.line.text()) - 0.5) * 10), 2)) + ' %')            self.resultBox.setAlignment(Qt.AlignCenter)            self.errorLabel.clear()        else:            self.errorLabel.setText("<font color='red'><b>* Please enter CPI/CGPA between 1.00 to 10.00.</b></font")            self.resultBox.clear()        self.errorLabel.adjustSize()if __name__ == "__main__":    app = QApplication(sys.argv)    mainWin = MainWindow()    sys.exit(app.exec_())